{"version":3,"sources":["common/aeternity/walletState.ts","common/aeternity/WalletClient.ts","common/aeternity/WalletProvider.tsx","common/api/PredictionCards.api.ts","common/api/PredictionCardsApiProvider.tsx","common/mixins/spacing.ts","common/components/box/Box.tsx","common/mixins/glass.ts","common/components/Button/Button.tsx","common/components/dialog/dialog.tsx","common/components/spinner/Spinner.tsx","common/components/cards/Card.tsx","common/components/text/Text.tsx","common/utils/formatter.ts","events/components/EventList.tsx","common/components/input/input.tsx","common/components/text/Heading.tsx","events/NewEventForm.tsx","events/EventDashboard.tsx","predictions/PredictionCards.tsx","predictions/PredictionList.tsx","events/components/EventInfo.tsx","common/utils/transformer.ts","events/utils.ts","events/EventDetails.tsx","common/components/logo/Logo.svg","common/components/logo/Logo.tsx","navigation/Navigation.tsx","predictions/PredictionDetails.tsx","App.tsx","index.tsx","state.ts","theme.ts"],"names":["WalletStateActions","walletConnected","payload","type","CONNECTED","walletUpdate","UPDATE","walletReducer","state","action","CONNECTING","connecting","DISCONNECT","WalletClient","dispatcher","client","detector","this","a","init","scanForWallets","subscribeAddress","getAccountInfo","Node","url","process","internalUrl","name","instance","nodes","compilerUrl","address","account","balance","getNetworkConf","networkConf","RpcAepp","onNetworkChange","params","getNetworkId","networkId","alert","onAddressChange","onDisconnect","Promise","resolve","reject","handleWallets","wallets","newWallet","Object","values","stopScan","getConnection","connectToWallet","BrowserWindowMessageConnection","connectionInfo","id","scannerConnection","WalletDetector","connection","scan","WalletContext","createContext","undefined","useWallet","context","useContext","Error","WalletProvider","children","useDispatch","Provider","value","PredictionCardsApi","walletClient","code","aensName","event","img_higher","img_lower","getInteractiveInstance","methods","create_prediction","convertDate","start_timestamp","end_timestamp","toAettos","asset","target_price","toFixed","callResult","amount","contractObj","deposit_to_nft","rent_nft","claim","withdraw_from_nft","getDryRunInstance","current_renter","decodedResult","owner_of","all_predictions","prediction","get_nft_meta","get_pot_size","get_remaining_balance","fetch","response","text","dateString","Date","getTime","Ae","SDKInstance","getContractInstance","contractAddress","getClient","PredictionCardsContext","usePredictionCardsApi","PredictionCardsProvider","wallet","api","marginMixin","props","margin","map","m","theme","join","BoxWrapper","styled","div","padding","p","height","width","center","row","wrap","align","justify","Box","glassMixinNoShadow","css","glassMixin","Button","button","primary","medium","large","borderRadius","StyledModal","attrs","StyledFooter","Close","Modal","onClose","wrapper","document","createElement","classList","add","useEffect","body","append","removeChild","ReactDOM","createPortal","onClick","ModalFooter","getSpinnerSize","size","Spinner","StyledCard","vertical","StyledCardFooter","StyledCardTag","small","Card","tag","CardFooter","textMixin","textColorMixing","light","BasicText","marginTop","Caption","SmallText","DateFormatter","Intl","DateTimeFormat","dateStyle","timeStyle","CurrencyFormatter","NumberFormat","style","currency","StyledEventList","EventList","onEventClick","events","length","evt","format","BigNumber","toAe","pot_size","StyledLabel","label","StyledInput","input","headingStyleMixin","MidHeading","h1","h2","SmallHeading","h3","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","newEventFormReducer","target","canCreate","NewEventForm","onEventCreated","useState","isLoading","setIsLoading","today","predictionApi","useReducer","dispatch","errorMsg","setErrorMsg","createPredictionEvent","createPrediction","console","error","images","onChange","step","parseFloat","min","max","endDate","startDate","find","higher","hash","src","alt","lower","disabled","Toolbar","EventDashboard","forwardRef","_","ref","history","useHistory","useSelector","setEvents","showModal","setShowModal","update","getPredictions","result","all","e","getPotSize","potSizes","i","status","push","NFTImage","img","PredictionCard","isCompleted","isWinner","imageHash","rent","owner","substr","StyledPredictionList","PredictionList","predictions","onPredictionClick","isComplete","winnerNFT","EventInfo","config","DECIMAL_PLACES","milliseconds","getRentById","predictionEvent","nftId","aettosPerMillisecond","nft_last_rent_aettos_per_millisecond","multipliedBy","EventDetails","useParams","eventId","parseInt","setEvent","setStatus","setPredictions","getPrediction","currStatus","getNFTOwner","nft_higher_id","nft_lower_equal_id","res","higherOwner","lowerOwner","getNFTRenter","getNFTImage","higherImage","lowerImage","winning_nft_id","StyledImg","Logo","svgLogo","StyledWrapper","NavActions","Navigation","handleConnect","connect","getPredictionLabel","PredictionDetails","predictionId","isProcessing","setIsProcessing","setPrediction","setRent","deposit","setDeposit","isWinnerNFT","setIsWinnerNFT","currentDeposit","setCurrentDeposit","getDeposit","currDeposit","triggerRent","rentNFT","aePerDay","dividedBy","renter","newDeposit","curr","claimOrWithdraw","hasRented","withdraw","availableBalance","hodlTimes","nft_hodl_time","hodlers","includes","autoFocus","Math","floor","ContentWrapper","App","path","exact","component","appStore","rootReducer","combineReducers","createStore","applyMiddleware","thunk","initStore","render","StrictMode","colors","brand","secondary","accent","xlarge","xxlarge","store","getElementById"],"mappings":"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","file":"static/js/main.4ba07f82.chunk.js","sourcesContent":["import { Reducer } from \"redux\";\nimport { GenericAction } from \"../../state\";\n\nexport enum WalletStateActions {\n  CONNECTING = 'CONNECTING',\n  CONNECTED = 'CONNECTED',\n  UPDATE = 'UPDATE',\n  DISCONNECT = 'DISCONNECT'\n}\n\nexport const walletConnecting = () => ({\n  type: WalletStateActions.CONNECTING\n});\n\nexport const walletConnected = (payload: any) => ({\n  type: WalletStateActions.CONNECTED,\n  payload\n});\n\nexport const walletUpdate = (payload: any) => ({\n  type: WalletStateActions.UPDATE,\n  payload\n});\n\nexport const walletDisconnected = () => ({\n  type: WalletStateActions.DISCONNECT\n});\n\n\nexport const walletReducer: Reducer<any, GenericAction> = (state = {}, action: GenericAction) => {\n  switch (action.type) {\n    case WalletStateActions.CONNECTING:\n      return {\n        ...state,\n        connecting: true\n      }\n    case WalletStateActions.CONNECTED:\n      return {\n        ...state,\n        connecting: false,\n        ...action.payload\n      }\n    case WalletStateActions.UPDATE:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case WalletStateActions.DISCONNECT: {\n      return {}\n    }\n    default:\n      return state;\n  }\n}\n","import { Node, RpcAepp } from '@aeternity/aepp-sdk';\nimport BrowserWindowMessageConnection from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/connection/browser-window-message';\nimport WalletDetector from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/wallet-detector';\nimport { Dispatch } from 'react';\nimport { Action } from 'redux';\nimport { walletConnected, walletConnecting, walletDisconnected, walletUpdate } from './walletState';\n\nexport class WalletClient {\n  private client;\n  private detector;\n\n  private dispatcher;\n\n  constructor(dispatcher: Dispatch<Action>) {\n    this.dispatcher = dispatcher;\n  }\n\n  async connect() {\n    this.dispatcher(walletConnecting());\n    await this.init();\n    await this.scanForWallets() // Start looking for new wallets\n    await this.client.subscribeAddress('subscribe', 'connected');\n    this.dispatcher(walletConnected(await this.getAccountInfo()))\n  }\n\n  getClient() {\n    return this.client;\n  }\n\n  isConnected(): boolean {\n    return !!this.client;\n  }\n\n  async getNetworkConf() {\n    return {\n      nodes: [\n        { name: 'test-net', instance: await Node({ url: process.env.REACT_APP_NODE_URL, internalUrl: process.env.REACT_APP_NODE_INTERNAL_URL }) }\n      ],\n      compilerUrl: process.env.REACT_APP_COMPILER_URL,\n    }\n  }\n\n  private async getAccountInfo() {\n    const account = await this.client.address();\n    const balance = await this.client.balance(account);\n    return {\n      account,\n      balance\n    }\n  }\n\n  private async init() {\n    const networkConf = await this.getNetworkConf();\n\n    this.client = await RpcAepp({\n      name: 'AEPP',\n      ...networkConf,\n      onNetworkChange(params) {\n        if (this.getNetworkId() !== params.networkId) alert(`Connected network ${this.getNetworkId()} is not supported with wallet network ${params.networkId}`)\n      },\n      onAddressChange: async () => {\n        walletUpdate(await this.getAccountInfo());\n      },\n      onDisconnect() {\n        walletDisconnected();\n      }\n    })\n  }\n\n  private async scanForWallets() {\n    return new Promise<void>(async (resolve, reject) => {\n      // call-back function for new wallet event\n      const handleWallets = async ({ wallets, newWallet }) => {\n        newWallet = newWallet || Object.values(wallets)[0]\n        // ask if you want to connect\n        if (newWallet.name === 'Superhero') {\n          // Stop scanning wallets\n          this.detector.stopScan()\n          // Connect to wallet\n          await this.client.connectToWallet(await newWallet.getConnection());\n          resolve();\n        }\n      }\n      // Create connection object for WalletDetector\n      const scannerConnection = await BrowserWindowMessageConnection({\n        connectionInfo: { id: 'spy' }\n      })\n      // Initialize WalletDetector \n      this.detector = await WalletDetector({ connection: scannerConnection })\n      // Start scanning\n      this.detector.scan(handleWallets)\n    });\n  }\n\n}","import { createContext, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { WalletClient } from \"./WalletClient\";\n\nconst WalletContext = createContext<WalletClient | undefined>(undefined);\n\nexport const useWallet = () => {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw Error(\"Wallet client not available\");\n  }\n  return context;\n};\n\nexport const WalletProvider: React.FC = ({ children }) => {\n  const dispatcher = useDispatch();\n  return (\n    <WalletContext.Provider value={new WalletClient(dispatcher)}>\n      {children}\n    </WalletContext.Provider>\n  )\n};","import { Universal as Ae } from '@aeternity/aepp-sdk/es';\nimport { toAettos } from '@aeternity/aepp-sdk/es/utils/amount-formatter';\nimport { PredictionEvent } from \"../../events/types\";\nimport { WalletClient } from \"../aeternity/WalletClient\";\n\nexport class PredictionCardsApi {\n  private walletClient: WalletClient;\n  private code;\n  private aensName = 'predictioncards.chain';\n\n  constructor(walletClient: WalletClient) {\n    this.walletClient = walletClient;\n  }\n\n  async createPrediction(event: PredictionEvent, img_higher: string, img_lower: string): Promise<any> {\n    const instance = await this.getInteractiveInstance();\n    const callResult = await instance.methods.create_prediction(this.convertDate(event.start_timestamp), this.convertDate(event.end_timestamp), toAettos(100), event.asset, (event.target_price * 100).toFixed(0), img_lower, img_higher);\n    return callResult;\n  };\n\n  async deposit(id: number, amount: number): Promise<any> {\n    const contractObj = await this.getInteractiveInstance();\n    const callResult = await contractObj.methods.deposit_to_nft(id, { amount })\n    return callResult;\n  }\n\n  async rentNFT(id: number, amount?: string | 0): Promise<any> {\n    const instance = await this.getInteractiveInstance();\n    const callResult = await instance.methods.rent_nft(id, amount);\n    return callResult;\n  }\n\n  async claim(id: number) {\n    const instance = await this.getInteractiveInstance();\n    const callResult = await instance.methods.claim(id);\n    return callResult;\n  }\n\n  async withdraw(id: number) {\n    const instance = await this.getInteractiveInstance();\n    const callResult = await instance.methods.withdraw_from_nft(id, undefined);\n    return callResult;\n  }\n\n  async getNFTRenter(id: number): Promise<string | undefined> {\n    const contractObj = await this.getDryRunInstance();\n    try {\n      const callResult = await contractObj.methods.current_renter(id);\n      return callResult.decodedResult;\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  async getNFTOwner(id: number): Promise<string | undefined> {\n    const contractObj = await this.getDryRunInstance();\n    try {\n      const callResult = await contractObj.methods.owner_of(id);\n      return callResult.decodedResult;\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  async getPredictions(): Promise<Array<[string, PredictionEvent]>> {\n    await this.init();\n    const contractObj = await this.getDryRunInstance();\n    const callResult = await contractObj.methods.all_predictions();\n    return callResult.decodedResult;\n  }\n\n  async getPrediction(id: number): Promise<[string, PredictionEvent]> {\n    const contractObj = await this.getDryRunInstance();\n    const callResult = await contractObj.methods.prediction(id);\n    return callResult.decodedResult;\n  }\n\n  async getNFTImage(id: number): Promise<string> {\n    const contractObj = await this.getDryRunInstance();\n    const callResult = await contractObj.methods.get_nft_meta(id);\n    return callResult.decodedResult;\n  }\n\n  async getPotSize(id: number): Promise<number> {\n    const instance = await this.getDryRunInstance();\n    const callResult = await instance.methods.get_pot_size(id);\n    return callResult.decodedResult;\n  }\n\n  async getDeposit(id: number, address: string): Promise<number> {\n    const instance = await this.getDryRunInstance();\n    const callResult = await instance.methods.get_remaining_balance(id, address);\n    return callResult.decodedResult;\n  }\n\n  private async init() {\n    if (!this.code) {\n      const response = await fetch('/PredictionCards.aes');\n      this.code = await response.text();\n    }\n  }\n\n  private convertDate(dateString: any) {\n    const asDate = new Date(dateString);\n    return asDate.getTime();\n  }\n\n  private async getDryRunInstance() {\n    this.init();\n    const networkConf = await this.walletClient.getNetworkConf();\n    const SDKInstance = await Ae({\n      ...networkConf\n    });\n    return await SDKInstance.getContractInstance(this.code, { contractAddress: this.aensName })\n  }\n\n  private async getInteractiveInstance() {\n    await this.init();\n    return await this.walletClient.getClient().getContractInstance(this.code, { contractAddress: this.aensName });\n  }\n\n};","import { createContext, useContext } from \"react\";\nimport { useWallet } from \"../aeternity/WalletProvider\";\nimport { PredictionCardsApi } from \"./PredictionCards.api\";\n\nconst PredictionCardsContext = createContext<PredictionCardsApi | undefined>(undefined);\n\nexport const usePredictionCardsApi = (): PredictionCardsApi => {\n  return useContext(PredictionCardsContext)!;\n};\n\nexport const PredictionCardsProvider: React.FC = ({ children }) => {\n  const wallet = useWallet();\n  const api = new PredictionCardsApi(wallet);\n\n  return (\n    <PredictionCardsContext.Provider value={api} >\n      { children}\n    </PredictionCardsContext.Provider>\n  )\n};","export const marginMixin = props => props.margin && `margin: ${props.margin.map(m => props.theme.margin[m] || `${m}px`).join(' ')};`;\n","import styled from \"styled-components\";\nimport { MarginSize, PaddingSize } from \"../../../theme.types\";\nimport { marginMixin } from \"../../mixins/spacing\";\n\ninterface BoxProps {\n  gap?: number;\n  margin?: Array<MarginSize | number>;\n  padding?: Array<PaddingSize | number>;\n  row?: boolean;\n  height?: string;\n  width?: string;\n  center?: boolean;\n  wrap?: boolean;\n  align?: string;\n  justify?: \"space-between\";\n};\n\nconst BoxWrapper = styled.div<BoxProps>`\n  display: flex;\n  ${marginMixin}\n  ${props => props.padding && `padding: ${props.padding.map(p => props.theme.padding[p] || `${p}px`).join(' ')}`};\n\n  ${props => props.height && `height: ${props.height}`};\n  ${props => props.width && `width: ${props.width}`};\n\n  ${props => props.center && `align-items: center`};\n  ${props => props.row ? `flex-direction: row` : `flex-direction: column`};\n  ${props => props.wrap && `flex-wrap: wrap`};\n  ${props => props.height && `height: ${props.height}`};\n  ${props => props.width && `width: ${props.width}`};\n  ${props => props.align && `align-items: ${props.align}`};\n  ${props => props.justify && `justify-content: ${props.justify}`};\n`;\n\nexport const Box: React.FC<BoxProps> = ({ children, ...props }) => (\n  <BoxWrapper {...props}>\n    {children}\n  </BoxWrapper>\n);","import { css } from \"styled-components\";\n\nexport const glassMixinNoShadow = () => {\n  return css`\n    background: rgba( 255, 255, 255, 0.65 );\n    border: 1px solid rgba( 255, 255, 255, 0.18 );\n  `;\n}\n\nexport const glassMixin = () => {\n  return css`\n    ${glassMixinNoShadow}\n    box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\n  `;\n}\n\nexport const glassMixinWithBlur = () => {\n  return css`\n    ${glassMixin}\n    backdrop-filter: blur( 4px );\n    -webkit-backdrop-filter: blur( 4px );\n  `;\n}\n\nexport const glassHoverMixin = () => {\n  return css`\n    &:hover {\n    }\n  `;\n};","import styled from \"styled-components\";\nimport { MarginSize } from \"../../../theme.types\";\nimport { glassMixinNoShadow } from \"../../mixins/glass\";\nimport { marginMixin } from \"../../mixins/spacing\";\n\ninterface ButtonProps {\n  margin?: Array<MarginSize | number>;\n  primary?: boolean;\n}\n\nexport const Button = styled.button<ButtonProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background-color: transparent;\n  font-weight: ${props => props.primary ? 'normal' : 'bold'};\n  padding: ${props => `${props.theme.padding.medium} ${props.theme.padding.large}`};\n  ${marginMixin}\n  border-radius: ${props => props.theme.borderRadius};\n\n  cursor: pointer;\n\n  ${props => props.primary && glassMixinNoShadow()}\n\n  &[disabled] {\n    opacity: 0.6;\n    cursor: default;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from \"styled-components\";\nimport { glassMixinWithBlur } from '../../mixins/glass';\nimport { Box } from '../box/Box';\n\ninterface Props {\n  onClose?: () => void;\n}\n\nconst StyledModal = styled(Box).attrs({\n  padding: [\"large\", \"large\", \"large\", \"large\"]\n})`\n  position: relative;\n  display: flex;\n  min-width: 400px;\n  max-width: calc(100% - 100px);\n  min-height: 300px;\n  max-height: calc(100% - 100px);\n  border-radius: ${props => props.theme.borderRadius};\n  ${glassMixinWithBlur};\n  animation: pop-in 0.2s;\n\n  @keyframes pop-in {\n    0% { opacity: 0; transform: scale(0.5); }\n    100% { opacity: 1; transform: scale(1); }\n  }\n`;\n\nconst StyledFooter = styled(Box).attrs({\n  row: true\n})`\n  margin-top: ${props => props.theme.margin.large};\n  justify-content: flex-end;\n  margin-right: -${props => props.theme.margin.medium};\n  \n  & > * {\n    margin-right: ${props => props.theme.margin.medium};\n  }\n`;\n\nconst Close = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 5px;\n  right: 5px;\n  background-color: black;\n  color: white;\n  border-radius: 100%;\n  width: 20px;\n  height: 20px;\n  font-size: 12px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nexport const Modal: React.FC<Props> = ({ children, onClose }) => {\n  const wrapper = document.createElement('div');\n  wrapper.classList.add('dialog');\n\n  useEffect(() => {\n    document.body.append(wrapper);\n    return (() => {\n      document.body.removeChild(wrapper);\n    });\n  })\n  return ReactDOM.createPortal(\n    <StyledModal>\n      {onClose && <Close onClick={onClose}>&#10006;</Close>}\n      {children}\n    </StyledModal>,\n    wrapper\n  );\n}\n\nexport const ModalFooter: React.FC = ({ children }) => (\n  <StyledFooter>\n    {children}\n  </StyledFooter>\n);","import styled from \"styled-components\";\n\ntype SpinnerSize = \"small\" | \"medium\" | \"large\";\n\nconst getSpinnerSize = (props: { size?: SpinnerSize }): number => {\n  switch (props.size) {\n    case 'small':\n      return 24;\n    case 'medium':\n      return 46;\n    case 'large':\n    default:\n      return 64;\n  }\n}\n\nexport const Spinner = styled.div<{ size?: SpinnerSize }>`\n  display: inline-block;\n  width: ${props => getSpinnerSize(props) + 6};\n  height: ${props => getSpinnerSize(props) + 6};\n\n  &:after {\n    content: \" \";\n    display: block;\n    width: ${getSpinnerSize}px;\n    height: ${getSpinnerSize}px;\n    margin: 8px;\n    border-radius: 50%;\n    border: 6px solid #fff;\n    border-color: #fff transparent #fff transparent;\n    animation: spinning 1.2s linear infinite;\n  }\n  @keyframes spinning {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`","import styled from \"styled-components\";\nimport { glassHoverMixin, glassMixin, glassMixinNoShadow } from \"../../mixins/glass\";\n\ninterface Props {\n  onClick?: () => void;\n  vertical?: boolean;\n  tag?: string;\n}\n\nconst StyledCard = styled.div<Props>`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  ${glassMixin}\n  padding: ${props => props.theme.padding.large};\n  border-radius: ${props => props.theme.borderRadius};\n  min-width: ${props => props.vertical ? 200 : 380}px;\n  min-height:  ${props => props.vertical ? 300 : 200}px;\n\n  ${glassHoverMixin}\n\n  ${props => props.onClick && `cursor: pointer;`}\n`;\n\nconst StyledCardFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: auto;\n  width: 100%;\n`;\n\nconst StyledCardTag = styled.div`\n  position: absolute;\n  border-radius: ${props => props.theme.borderRadius};\n  padding: ${props => props.theme.padding.small};\n  top: 6px;\n  right: 6px;\n  ${glassMixinNoShadow};\n`;\n\nexport const Card: React.FC<Props> = ({ children, onClick, vertical, tag }) => (\n  <StyledCard onClick={onClick} vertical={vertical}>\n    {tag && <StyledCardTag>{tag}</StyledCardTag>}\n    {children}\n  </StyledCard>\n);\n\nexport const CardFooter: React.FC = ({ children }) => (\n  <StyledCardFooter>\n    {children}\n  </StyledCardFooter>\n);","import styled, { css } from \"styled-components\";\nimport { MarginSize } from \"../../../theme.types\";\n\nconst textMixin = css`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const textColorMixing = (props: { light?: boolean }) => `color: ${props.light ? 'white' : 'black'};`;\n\n\nexport const BasicText = styled.p<{ light?: boolean, marginTop?: MarginSize, center?}>`\n  ${textMixin}\n  ${textColorMixing}\n  font-size: 16px;\n  ${props => props.center && `text-align: center;`}\n  ${props => props.marginTop && `margin-top: ${props.theme.margin[props.marginTop]};`}\n`;\n\nexport const Caption = styled(BasicText)`\n  font-size: 12px;\n`;\n\nexport const SmallText = styled(BasicText) <{ light?: boolean }>`\n  font-size: 14px;\n`;","export const DateFormatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'long', timeStyle: 'short' });\nexport const CurrencyFormatter = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' });\nexport const formatAddress = (address?: string) => address && `${address.substr(0, 3)} ${address.substr(3, 2)} ... ${address.substr(-3)}`;","import { toAe } from '@aeternity/aepp-sdk/es/utils/amount-formatter';\nimport { BigNumber } from 'bignumber.js';\nimport styled from \"styled-components\";\nimport { Box } from \"../../common/components/box/Box\";\nimport { Card, CardFooter } from \"../../common/components/cards/Card\";\nimport { BasicText, Caption } from \"../../common/components/text/Text\";\nimport { CurrencyFormatter, DateFormatter } from \"../../common/utils/formatter\";\nimport { PredictionEvent } from \"../types\";\n\ninterface Props {\n  onEventClick: (event: PredictionEvent) => void;\n  events: Array<[string, PredictionEvent]>;\n}\n\nconst StyledEventList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  margin-top: -${props => props.theme.margin.large};\n  margin-left: -${props => props.theme.margin.large};\n\n  & > * {\n    margin-top: ${props => props.theme.margin.large};\n    margin-left: ${props => props.theme.margin.large};\n  }\n`;\n\nexport const EventList = ({ onEventClick, events }: Props) => (\n  <StyledEventList>\n    {events.length === 0 && <BasicText>No event found. Create one now!</BasicText>}\n    {events.map(([type, evt]) => (\n      <Card key={evt.id} onClick={() => onEventClick(evt)} tag={type}>\n        <Box margin={['large', 0, 0, 0]}>\n          <BasicText>Price of <strong>{evt.asset}</strong></BasicText>\n          <BasicText>higher or lower than <strong>{CurrencyFormatter.format(evt.target_price / 100)}</strong></BasicText>\n          <BasicText>by <strong>{DateFormatter.format(evt.end_timestamp)}</strong></BasicText>\n        </Box>\n        <CardFooter>\n          <Box row={false}>\n            <Caption>current pot size</Caption>\n            <BasicText>{new BigNumber(toAe(evt.pot_size)).toFixed(2) || 0} AE</BasicText>\n          </Box>\n        </CardFooter>\n      </Card>\n    ))}\n  </StyledEventList>\n)","import styled from \"styled-components\";\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: ${props => props.theme.margin.medium} 0 ${props => props.theme.margin.medium} 0;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid rgba( 255, 255, 255, 0.9);\n  outline: none;\n  padding: ${props => `${props.theme.padding.small} ${props.theme.padding.large}`};\n  margin: ${props => props.theme.margin.medium} 0 0 0;\n`;\n","import styled, { css } from \"styled-components\";\nimport { textColorMixing } from \"./Text\";\n\nconst headingStyleMixin = css`\n  margin: 0;\n  padding: 0;\n  font-weight: normal;\n`;\n\nexport const LargeHeading = styled.h1<{ light?: boolean }>`\n  ${headingStyleMixin}\n  ${textColorMixing}\n`;\n\nexport const MidHeading = styled.h2<{ light?: boolean, onClick?: () => void }>`\n  ${headingStyleMixin}\n  ${textColorMixing}\n  ${props => props.onClick && `cursor: pointer;`}\n`;\n\nexport const SmallHeading = styled.h3<{ light?: boolean }>`\n  ${headingStyleMixin}\n  ${textColorMixing}\n`;","import React, { useReducer, useState } from \"react\"\nimport { usePredictionCardsApi } from \"../common/api/PredictionCardsApiProvider\"\nimport { Box } from \"../common/components/box/Box\"\nimport { Button } from \"../common/components/Button/Button\"\nimport { ModalFooter } from \"../common/components/dialog/dialog\"\nimport { StyledInput, StyledLabel } from \"../common/components/input/input\"\nimport { Spinner } from \"../common/components/spinner/Spinner\"\nimport { SmallHeading } from \"../common/components/text/Heading\"\nimport { BasicText } from \"../common/components/text/Text\"\n\n\ninterface Props {\n  onClose: () => void;\n  onEventCreated: () => void;\n}\n\nconst format = (value: Date) => {\n  return `${value.getFullYear()}-${(value.getMonth() + 1).toString().padStart(2, '0')}-${value.getDate().toString().padStart(2, '0')}T${value.getHours()}:${value.getMinutes()}`\n}\n\nconst newEventFormReducer = (state, action) => {\n  return {\n    ...state,\n    [action.target]: action.value\n  }\n}\n\nconst canCreate = (state) => {\n  return state.asset && state.target_price > 0 &&\n    state.start_timestamp && state.end_timestamp && state.end_timestamp > state.start_timestamp &&\n    state.img_higher && state.img_lower;\n}\n\nexport const NewEventForm: React.FC<Props> = ({ onClose, onEventCreated }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const today = new Date();\n  const predictionApi = usePredictionCardsApi();\n  const [state, dispatch] = useReducer(newEventFormReducer, {\n    asset: \"AE\",\n    img_higher: '',\n    img_lower: '',\n    target_price: 0,\n    start_timestamp: format(today),\n    end_timestamp: \"\",\n  });\n  const [errorMsg, setErrorMsg] = useState<string | undefined>();\n\n  const createPredictionEvent = async (state) => {\n    setIsLoading(true);\n    try {\n      await predictionApi.createPrediction(state, state.img_higher, state.img_lower);\n      onEventCreated();\n    } catch (err) {\n      console.error(err);\n      setErrorMsg(\"Creation failed. (More Details JS Console)\");\n    }\n    setIsLoading(false);\n  }\n\n  const available_assets = [\"AE\", \"BTC\", \"MTL\", \"XPR\", \"DOGE\"];\n  const images = [\n    {\n      \"asset\": \"AE\",\n      \"lower\": [\"QmQTzC8wUtjk85L5edXgaq3nmT1ML7bFD7srkemekeAK8Y\", \"QmTzAwEX8uEboAyq748vUsMPgPq1M2sTv1hPxzY7x1PssR\", \"QmSTYri916FcUb1xDFLhS92Kqknb5EuuNsEa1zg57Rx7gJ\"],\n      \"higher\": [\"QmNvXoxUZjAtRYiiGjTxianAJEbo4rW5VapnL9oPxRWdMn\", \"QmPaheBCzp82QUKFmnY2pHRz9JF4ouH1brMxrvrbDvrGnD\", \"QmaLjXtsb7Z1cKmXrBGFYbS26dGtv5ivt9HjNy4JQGi6Jq\"]\n    },\n    {\n      \"asset\": \"BTC\",\n      \"lower\": [\"QmZSRHgMewf95QdCQptc4P5JivBQd4zXavLX5dfYGYaXq5\", \"QmZsvPHwVMrMWvcHyh63YVXqGGrdGvUjPMNWGob1m3WRvo\", \"QmTpQi2EZntsLxwLL1zW3yaPgzww2Navzpu9NPbQJZ5u2w\"],\n      \"higher\": [\"QmZwYYE72r43RzpQLae27ssJkd6wzTBWqu5VQ9UTU7waya\", \"QmXnwGEEZY32bgSFdNsHe2XMnhtQYu7FYcUyXgEFRoH4qx\", \"QmRPkay6esiaBBJUqGMpf5iPmk82Ur8NtF2VJXmbShkWDD\"]\n    },\n    {\n      \"asset\": \"MTL\",\n      \"lower\": [\"QmSuNJr6KWpVP5KorRSSpCXJJJTYjYutxg9D6Xn5zwGE8o\", \"QmVUUuSF8LEbUzCw3gKUdbWcVwyazPSZmP75beUN51euxu\", \"QmSdPVaQ4AUZPgGv99FSjbSNQLGzaH5LZVCmQR3oSV3GBJ\"],\n      \"higher\": [\"QmWRCmLh33oDgtBChNeT5fRTwVzPPuKftfMjgGt6hyiKVh\", \"QmSgKZ9Ck2VhD83pmyKjLmbFcVMRB3wPRWaXbGsMXHKL9p\", \"QmViip6Hg4yJ6K4obAdMn5ofvtaaw2sdv9qkK5CiVqKPwC\"]\n    },\n    {\n      \"asset\": \"XPR\",\n      \"lower\": [\"QmWtmxuSFBLjBm5Vv6W2xuXoDEp5Fn73N7sHy4EuGiTgJ1\", \"QmfFGPoozKQqwwzEFnbmRxXEHL9756hQjViyWfe4dVPK3v\", \"QmW4nkM6fjML4Npa8s4MJ7EAtwZCicv8q2S6eT5spjDEaF\"],\n      \"higher\": [\"QmV2jTDUQoTVXb2Jwadu59ugnHALkB4Km4tku4ZUEWsskt\", \"QmY87ttqhVs49jye9c3LHELtz9YTHtL4r3DXxhxAssxPop\", \"Qmb3uj9qV9mixH3Z8sHquFK2jK7U9snK3DfZ9vNZYzUwVB\"]\n    },\n    {\n      \"asset\": \"DOGE\",\n      \"lower\": [\"QmSw9RZRxXxcMEWNUYWcDhHc1yduz2CQxf4NsSDgeKWFv1\", \"QmcZYLEeX8Q9W3hqEZPDZoPW9mxpmQH31C1zkAXFDJkhnw\", \"QmdrfSHXsmYM8mJAm7SHPDQjNQzTuTVes874K2XfrxgW3R\"],\n      \"higher\": [\"Qmaj7dtAtkwWh1zDrRNSNse1443WMcyVkjutFep4g5Z1ni\", \"QmPcnBi8PE32hJTSNjiJhT89idzEvwzZMrXvyCW3NczKb5\", \"QmUNe9uRsGyMxTWn2U9YhuZtgMQzaAgnCfDuxcVyLW2WAn\"]\n    }\n  ]\n\n  return (\n    <>\n      <SmallHeading>Create a new Event</SmallHeading>\n      <Box margin={[\"medium\", 0, 0, 0]}>\n        <StyledLabel>\n          <BasicText>Asset</BasicText>\n          <select name=\"asset\" value={state.asset} onChange={evt => dispatch({ target: evt.target.name, value: evt.target.value })}>\n            {available_assets.map(asset => <option key={asset} value={asset} >{asset}</option>)}\n          </select>\n        </StyledLabel>\n        <StyledLabel>\n          <BasicText>Target Price (USD)</BasicText>\n          <StyledInput type=\"number\" step=\".01\" value={state.target_price} name=\"target_price\" onChange={evt => dispatch({ target: evt.target.name, value: parseFloat(evt.target.value) })} />\n        </StyledLabel>\n        <Box row justify=\"space-between\">\n          <StyledLabel>\n            <BasicText>Start Date</BasicText>\n            <StyledInput type=\"datetime-local\" name=\"start_timestamp\" value={state.start_timestamp} min={format(today)} max={state.endDate && format(new Date(state.endDate))} onChange={evt => dispatch({ target: evt.target.name, value: evt.target.value })} />\n          </StyledLabel>\n          <StyledLabel>\n            <BasicText>End Date</BasicText>\n            <StyledInput type=\"datetime-local\" name=\"end_timestamp\" value={state.end_timestamp} min={format(new Date(state.startDate))} onChange={evt => evt.target && dispatch({ target: evt.target.name, value: evt.target.value })} />\n          </StyledLabel>\n        </Box>\n        <Box row margin={['medium', 0, 0, 0]} justify=\"space-between\">\n          <Box>\n            <SmallHeading>Higher NFT</SmallHeading>\n            {images.find(({ asset }) => asset === state.asset)?.higher.map(hash => (\n              <Box key={hash} row center margin={['small', 0, 0, 'small']}>\n                <input type=\"radio\" name=\"img_higher\" value={hash} onChange={evt => dispatch({ target: evt.target.name, value: evt.target.value })} />\n                <img src={`https://ipfs.io/ipfs/${hash}`} width=\"100\" height=\"100\" alt=\"asset thumbnail\" />\n              </Box>\n            ))}\n          </Box>\n          <Box row={false}>\n            <SmallHeading>Lower NFT</SmallHeading>\n            {images.find(({ asset }) => asset === state.asset)?.lower.map(hash => (\n              <Box key={hash} row center margin={['small', 0, 0, 'small']}>\n                <input type=\"radio\" name=\"img_lower\" value={hash} onChange={evt => dispatch({ target: evt.target.name, value: evt.target.value })} />\n                <img src={`https://ipfs.io/ipfs/${hash}`} width=\"100\" height=\"100\" alt=\"asset thumbnail\" />\n              </Box>\n            ))}\n          </Box>\n        </Box>\n      </Box>\n      {errorMsg && <BasicText>{errorMsg}</BasicText>}\n      <ModalFooter>\n        {isLoading ? <Spinner size=\"small\" /> : (\n          <>\n            <Button onClick={onClose}>Close</Button>\n            <Button primary onClick={() => createPredictionEvent(state)} disabled={!canCreate(state)}>Create</Button>\n          </>\n        )}\n      </ModalFooter>\n    </>\n  )\n}","import React, { forwardRef, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { usePredictionCardsApi } from \"../common/api/PredictionCardsApiProvider\";\nimport { Box } from \"../common/components/box/Box\";\nimport { Button } from \"../common/components/Button/Button\";\nimport { Modal } from \"../common/components/dialog/dialog\";\nimport { Spinner } from \"../common/components/spinner/Spinner\";\nimport { AppState } from \"../state\";\nimport { EventList } from \"./components/EventList\";\nimport { NewEventForm } from \"./NewEventForm\";\nimport { PredictionEvent } from \"./types\";\n\nconst Toolbar = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin: 0 0 ${props => props.theme.margin.large} 0;\n`;\n\nexport const EventDashboard = forwardRef((_, ref) => {\n  const history = useHistory();\n  const predictionApi = usePredictionCardsApi();\n  const { account } = useSelector<AppState, any>(state => state.wallet);\n  const [isLoading, setIsLoading] = useState(true);\n  const [events, setEvents] = useState<Array<[string, PredictionEvent]>>([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const update = async () => {\n    setIsLoading(true);\n    const result = await predictionApi.getPredictions();\n    const potSizes = await Promise.all(\n      result.map(([, e]) => predictionApi.getPotSize(e.id!))\n    );\n    setEvents(result.map(([status, event], i) => ([\n      status, {\n        ...event,\n        pot_size: potSizes[i]\n      }\n    ])));\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    update();\n  }, []);\n\n  const handleEventCreated = () => {\n    setShowModal(false);\n    update();\n  }\n\n  return (\n    <Box width=\"100%\" align=\"center\">\n      <Toolbar>\n        <Button margin={[0, 0, 0, \"medium\"]} onClick={() => update()} primary>Reload</Button>\n        {account &&\n          <Button margin={[0, 0, 0, \"medium\"]} onClick={() => setShowModal(true)} primary>New Event</Button>}\n      </Toolbar>\n      <Box>\n        {isLoading ? <Spinner /> : (\n          <EventList onEventClick={(event) => history.push(`/${event.id}`)} events={events} />\n        )}\n      </Box>\n      {showModal && (\n        <Modal onClose={() => setShowModal(false)}>\n          <NewEventForm onClose={() => setShowModal(false)} onEventCreated={() => handleEventCreated()} />\n        </Modal>\n      )}\n    </Box>\n  )\n})","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Box } from \"../common/components/box/Box\";\nimport { Card, CardFooter } from \"../common/components/cards/Card\";\nimport { SmallHeading } from \"../common/components/text/Heading\";\nimport { BasicText, Caption, SmallText } from \"../common/components/text/Text\";\nimport { formatAddress } from \"../common/utils/formatter\";\nimport { Prediction } from \"./types\";\n\nconst NFTImage = styled.img`\n  width: 150px;\n  height: auto;\n  border-radius: ${props => props.theme.borderRadius};\n`;\n\ninterface Props {\n  prediction?: Prediction;\n  isCompleted: boolean;\n  isWinner?: boolean;\n  onClick?: () => void;\n}\n\nexport const PredictionCard: React.FC<Props> = ({ prediction, onClick, isCompleted, isWinner }) => (\n  <Card vertical onClick={onClick}>\n    <Box center>\n      <SmallHeading>{prediction?.name} {isWinner && <>&#9818;</>}</SmallHeading>\n    </Box>\n    <Box center margin={['medium', 0, 0, 0]}>\n      <NFTImage src={`https://ipfs.io/ipfs/${prediction?.imageHash}`} alt=\"NFT image\" />\n    </Box>\n    {prediction?.rent && prediction?.owner &&\n      <Box margin={['medium', 0, 0, 0]}>\n        <BasicText center>{prediction?.rent} AE/day</BasicText>\n      </Box>\n    }\n    <CardFooter>\n      <Box row={false}>\n        <Caption>{isCompleted ? 'owner' : 'renter'}</Caption>\n        <SmallText>{formatAddress(prediction?.owner) || 'None'}</SmallText>\n      </Box>\n    </CardFooter>\n  </Card>\n)","import React from \"react\";\nimport styled from \"styled-components\";\nimport { PredictionCard } from \"./PredictionCards\";\nimport { Prediction } from \"./types\";\n\ninterface Props {\n  predictions: Array<Prediction>;\n  isComplete: boolean;\n  winnerNFT?: number;\n  onPredictionClick: (prediction: Prediction) => void;\n}\n\nconst StyledPredictionList = styled.div`\n  display: flex;\n\n  margin-top: -${props => props.theme.margin.large};\n  margin-left: -${props => props.theme.margin.large};\n\n  & > * {\n    margin-top: ${props => props.theme.margin.large};\n    margin-left: ${props => props.theme.margin.large};\n  }\n`;\n\nexport const PredictionList: React.FC<Props> = ({ predictions, onPredictionClick, isComplete, winnerNFT }) => (\n  <StyledPredictionList>\n    {predictions.map(prediction => (\n      <PredictionCard key={prediction.id} prediction={prediction} onClick={() => onPredictionClick(prediction)} isCompleted={isComplete} isWinner={winnerNFT === prediction.id} />\n    ))}\n  </StyledPredictionList>\n)","import { Box } from \"../../common/components/box/Box\";\nimport { MidHeading } from \"../../common/components/text/Heading\";\nimport { CurrencyFormatter, DateFormatter } from \"../../common/utils/formatter\";\nimport { MarginSize } from \"../../theme.types\";\nimport { PredictionEvent } from \"../types\";\n\ninterface Props {\n  margin: Array<MarginSize | number>;\n  event: PredictionEvent;\n}\n\nexport const EventInfo: React.FC<Props> = ({ margin, event }) => (\n  <Box margin={margin}>\n    <MidHeading light>Price of <strong>{event.asset}</strong></MidHeading>\n    <MidHeading light>higher or lower than <strong>{CurrencyFormatter.format(event.target_price / 100)}</strong></MidHeading>\n    <MidHeading light>by <strong>{DateFormatter.format(event.end_timestamp)}</strong></MidHeading>\n  </Box>\n)","import { toAe, toAettos } from '@aeternity/aepp-sdk/es/utils/amount-formatter';\nimport BigNumber from 'bignumber.js';\n\n\nBigNumber.config({ DECIMAL_PLACES: 0 });\n\nconst daysToMilliseconds = (days: number): number => days * 24 * 60 * 60 * 1000\n\nconst milliseconds = new BigNumber(daysToMilliseconds(1));\n\nexport const toAettosPerMillisecond = (aePerDay?: string | number) => aePerDay && new BigNumber(toAettos(aePerDay)).dividedBy(milliseconds).toString();\nexport const toAePerDay = (aettosPerMillisecond?: string | number) => aettosPerMillisecond && new BigNumber(toAe(aettosPerMillisecond)).multipliedBy(milliseconds).toFixed(2).toString();","import { toAePerDay } from \"../common/utils/transformer\";\n\nexport const getRentById = (predictionEvent, nftId): string | undefined => {\n  const [, rent] = predictionEvent?.nft_last_rent_aettos_per_millisecond?.find(([nft]) => nft === nftId) || [];\n  return toAePerDay(rent)?.toString()\n}","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { usePredictionCardsApi } from \"../common/api/PredictionCardsApiProvider\";\nimport { Box } from \"../common/components/box/Box\";\nimport { Spinner } from \"../common/components/spinner/Spinner\";\nimport { PredictionList } from \"../predictions/PredictionList\";\nimport { Prediction } from \"../predictions/types\";\nimport { EventInfo } from \"./components/EventInfo\";\nimport { PredictionEvent } from \"./types\";\nimport { getRentById } from \"./utils\";\n\nexport const EventDetails = () => {\n  const params = useParams<{ eventId: string }>();\n  const eventId = parseInt(params.eventId);\n  const history = useHistory();\n  const predictionApi = usePredictionCardsApi();\n  const [event, setEvent] = useState<PredictionEvent>();\n  const [status, setStatus] = useState<string>();\n  const [isLoading, setIsLoading] = useState(true);\n  const [predictions, setPredictions] = useState<Array<Prediction>>([{\n    name: 'HIGHER'\n  }, {\n    name: 'LOWER'\n  }]);\n\n  useEffect(() => {\n    (async () => {\n      const [currStatus, predictionEvent] = await predictionApi.getPrediction(eventId);\n      setStatus(currStatus);\n      setEvent(predictionEvent);\n      let higherOwner;\n      let lowerOwner;\n      if (currStatus === 'ORACLE_PROCESSED') {\n        const res = await Promise.all([\n          predictionApi.getNFTOwner(predictionEvent.nft_higher_id),\n          predictionApi.getNFTOwner(predictionEvent.nft_lower_equal_id),\n        ]);\n        higherOwner = res[0];\n        lowerOwner = res[1];\n      } else {\n        const res = await Promise.all([\n          predictionApi.getNFTRenter(predictionEvent.nft_higher_id),\n          predictionApi.getNFTRenter(predictionEvent.nft_lower_equal_id),\n        ]);\n        higherOwner = res[0];\n        lowerOwner = res[1];\n      }\n      const [higherImage, lowerImage] = await Promise.all([\n        predictionApi.getNFTImage(predictionEvent.nft_higher_id),\n        predictionApi.getNFTImage(predictionEvent.nft_lower_equal_id),\n      ])\n      setPredictions(([higher, lower]) => [{\n        ...higher,\n        id: predictionEvent.nft_higher_id,\n        rent: getRentById(predictionEvent, predictionEvent.nft_higher_id),\n        imageHash: higherImage,\n        owner: higherOwner\n      }, {\n        ...lower,\n        id: predictionEvent.nft_lower_equal_id,\n        rent: getRentById(predictionEvent, predictionEvent.nft_lower_equal_id),\n        imageHash: lowerImage,\n        owner: lowerOwner\n      }])\n      setIsLoading(false);\n    })();\n  }, [predictionApi, eventId]);\n\n  return (\n    <Box center>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <EventInfo margin={[0, 0, \"xlarge\", 0]} event={event!} />\n          <PredictionList predictions={predictions} onPredictionClick={(prediction) => history.push(`${eventId}/${prediction.id}`)} isComplete={status === 'ORACLE_PROCESSED'} winnerNFT={event?.winning_nft_id} />\n        </>\n      )}\n    </Box>\n  );\n}","export default __webpack_public_path__ + \"static/media/Logo.818aad84.svg\";","import styled from 'styled-components';\nimport svgLogo from './Logo.svg';\n\nconst StyledImg = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nexport const Logo = () => (\n  <StyledImg src={svgLogo} />\n)","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWallet } from \"../common/aeternity/WalletProvider\";\nimport { Box } from \"../common/components/box/Box\";\nimport { Button } from \"../common/components/Button/Button\";\nimport { Logo } from \"../common/components/logo/Logo\";\nimport { Spinner } from \"../common/components/spinner/Spinner\";\nimport { MidHeading } from \"../common/components/text/Heading\";\nimport { BasicText } from \"../common/components/text/Text\";\nimport { glassMixin } from \"../common/mixins/glass\";\nimport { AppState } from \"../state\";\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: fixed;\n  z-index: 999;\n  width: 100%;\n  align-items: center;\n  height: 64px;\n  padding: ${props => `${props.theme.padding.small} ${props.theme.padding.large}`};\n  ${glassMixin}\n`;\n\nconst NavActions = styled.div`\n  display: flex;\n  margin-left: auto;\n  align-items: center;\n`;\n\nexport const Navigation = () => {\n  const history = useHistory();\n  const wallet = useWallet();\n  const { account, connecting } = useSelector<AppState, any>(state => state.wallet);\n\n  const handleConnect = async () => {\n    await wallet.connect();\n  };\n\n  return (\n    <StyledWrapper>\n      <Logo />\n      <Box margin={[0, 0, 0, 'medium']}>\n        <MidHeading onClick={() => history.push('/')} >PredictionCards</MidHeading>\n      </Box>\n      <NavActions>\n        {account ? (\n          <>\n            <BasicText>{account}</BasicText>\n          </>\n        ) : (connecting ? (\n          <Spinner size=\"small\" />\n        ) : (\n          <Button onClick={handleConnect} primary>Connect Wallet</Button>\n        )\n        )}\n      </NavActions>\n    </StyledWrapper >\n  )\n}","import { toAe, toAettos } from '@aeternity/aepp-sdk/es/utils/amount-formatter';\nimport BigNumber from 'bignumber.js';\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { useParams } from \"react-router\";\nimport { usePredictionCardsApi } from \"../common/api/PredictionCardsApiProvider\";\nimport { Box } from \"../common/components/box/Box\";\nimport { Button } from \"../common/components/Button/Button\";\nimport { StyledInput, StyledLabel } from '../common/components/input/input';\nimport { Spinner } from \"../common/components/spinner/Spinner\";\nimport { BasicText, Caption } from \"../common/components/text/Text\";\nimport { toAettosPerMillisecond } from '../common/utils/transformer';\nimport { EventInfo } from \"../events/components/EventInfo\";\nimport { PredictionEvent } from \"../events/types\";\nimport { getRentById } from '../events/utils';\nimport { AppState } from '../state';\nimport { PredictionCard } from './PredictionCards';\nimport { Prediction } from \"./types\";\n\n\nconst getPredictionLabel = (predictionEvent, id) => predictionEvent.nft_higher_id === id ? 'HIGHER' : 'LOWER';\n\nexport const PredictionDetails: React.FC = () => {\n  const params = useParams<{ eventId: string, predictionId: string }>();\n  const eventId = parseInt(params.eventId);\n  const predictionId = parseInt(params.predictionId);\n\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [event, setEvent] = useState<PredictionEvent>();\n  const [prediction, setPrediction] = useState<Prediction>();\n  const [rent, setRent] = useState<number>(0);\n  const [deposit, setDeposit] = useState(0);\n  const predictionApi = usePredictionCardsApi();\n  const { account } = useSelector<AppState, any>(state => state.wallet);\n  const [isWinnerNFT, setIsWinnerNFT] = useState(false);\n  const [currentDeposit, setCurrentDeposit] = useState(0);\n  const [errorMsg, setErrorMsg] = useState<string>();\n\n  useEffect(() => {\n    (async () => {\n      const [status, predictionEvent] = await predictionApi.getPrediction(eventId);\n      const imageHash = await predictionApi.getNFTImage(predictionId);\n      if (account) {\n        const currDeposit = await predictionApi.getDeposit(predictionId, account);\n        setCurrentDeposit(currDeposit);\n      }\n      let owner;\n      if (status === 'ORACLE_PROCESSED') {\n        owner = await predictionApi.getNFTOwner(predictionId);\n      } else {\n        owner = await predictionApi.getNFTRenter(predictionId);\n      }\n      setStatus(status);\n      setEvent(predictionEvent);\n      setPrediction({\n        id: predictionId,\n        name: getPredictionLabel(predictionEvent, predictionId),\n        owner: owner,\n        rent: getRentById(predictionEvent, predictionId),\n        imageHash\n      });\n      setIsLoading(false);\n      if (status === 'ORACLE_PROCESSED') {\n        setIsWinnerNFT(predictionEvent.winning_nft_id === predictionId);\n      }\n    })();\n  }, [predictionApi, eventId, predictionId, account]);\n\n  const triggerRent = async () => {\n    setIsProcessing(true);\n    setErrorMsg('');\n    try {\n      if (deposit > 0) {\n        await predictionApi.deposit(predictionId, toAettos(deposit));\n      }\n      await predictionApi.rentNFT(predictionId, toAettosPerMillisecond(rent));\n      const [, predictionEvent] = await predictionApi.getPrediction(eventId);\n      const renter = await predictionApi.getNFTRenter(predictionId);\n      const newDeposit = await predictionApi.getDeposit(predictionId, account);\n      setCurrentDeposit(newDeposit);\n      setEvent(predictionEvent);\n      setPrediction(curr => ({\n        ...curr,\n        owner: renter,\n        rent: getRentById(predictionEvent, predictionId)\n      }));\n\n      setDeposit(0);\n      setRent(0);\n    } catch (err) {\n      console.error(err);\n      setErrorMsg('Failed. Something went wrong. (More Details JS Console)');\n    }\n    setIsProcessing(false);\n  }\n\n  const claimOrWithdraw = async (hasRented: boolean) => {\n    setIsProcessing(true);\n    setErrorMsg('');\n    try {\n      if (isWinnerNFT && hasRented) {\n        await predictionApi.claim(eventId);\n      } else {\n        await predictionApi.withdraw(predictionId);\n      }\n      const newDeposit = await predictionApi.getDeposit(predictionId, account);\n      setCurrentDeposit(newDeposit);\n    } catch (err) {\n      console.error(err);\n      setErrorMsg('Failed. Something went wrong. (More Details JS Console)');\n    }\n    setIsProcessing(false);\n  }\n\n  const availableBalance = new BigNumber(toAe(currentDeposit)).toFixed(2);\n\n  const hodlTimes = event?.nft_hodl_time.find(([nftId]) => nftId === predictionId);\n  const hodlers = hodlTimes && hodlTimes[1]?.map(([acc]) => acc);\n  const hasRented = account && hodlers?.includes(account);\n\n  return (\n    <Box>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Box center>\n            <EventInfo margin={[0, 0, \"xlarge\", 0]} event={event!} />\n          </Box>\n          <Box row center>\n            <PredictionCard prediction={prediction} isCompleted={status === 'ORACLE_PROCESSED'} />\n            <Box margin={[0, 0, 0, 'xlarge']} width=\"250px\">\n              {status === 'ACTIVE' &&\n                <>\n                  <StyledLabel>\n                    <BasicText center light>rent price (AE/day)</BasicText>\n                    <StyledInput type=\"number\" autoFocus value={rent.toString()} onChange={evt => setRent(parseFloat(evt.target.value))} />\n                  </StyledLabel>\n                  <StyledLabel>\n                    <BasicText center light>deposit (AE) (optional)</BasicText>\n                    <StyledInput type=\"number\" autoFocus value={deposit.toString()} onChange={evt => setDeposit(parseFloat(evt.target.value))} />\n                  </StyledLabel>\n                  {currentDeposit > 0 && <Caption marginTop=\"large\" light>Available balance for Prediction NFT <strong>{availableBalance} AE</strong></Caption>}\n                  {rent > 0 && <Caption marginTop=\"large\" light>With the current price and deposit you can rent the NFT for <strong>{Math.floor((deposit + parseFloat(availableBalance)) / rent) || 0} days</strong></Caption>}\n                  {!isProcessing && (account ? (\n                    <Button margin={['large', 0, 0, 0]} primary onClick={() => triggerRent()} disabled={!rent}>rent the card</Button>\n                  ) : (\n                    <BasicText light marginTop=\"large\" center>connect your wallet to rent this card</BasicText>\n                  ))}\n                </>\n              }\n              {isProcessing &&\n                <Box center margin={['large', 0, 0, 0]}>\n                  <Spinner size=\"small\" />\n                </Box>\n              }\n              {!isProcessing && status !== 'CREATED' && prediction?.owner !== account && currentDeposit > 0 && <Button margin={['large', 0, 0, 0]} primary onClick={() => claimOrWithdraw(hasRented)}>withdraw</Button>}\n              {!isProcessing && status === 'ORACLE_PROCESSED' &&\n                <>\n                  {account ? (\n                    (isWinnerNFT && hasRented && <Button margin={['large', 0, 0, 0]} primary onClick={() => claimOrWithdraw(hasRented)}>claim</Button>)\n                  ) : (\n                    <BasicText light marginTop=\"large\" center>connect your wallet to withdraw/claim</BasicText>\n                  )}\n                </>\n              }\n              {errorMsg && <BasicText marginTop=\"large\" light center>{errorMsg}</BasicText>}\n            </Box>\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n}","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport styled from \"styled-components\";\nimport { WalletProvider } from \"./common/aeternity/WalletProvider\";\nimport { PredictionCardsProvider } from \"./common/api/PredictionCardsApiProvider\";\nimport { EventDashboard } from \"./events/EventDashboard\";\nimport { EventDetails } from \"./events/EventDetails\";\nimport { Navigation } from \"./navigation/Navigation\";\nimport { PredictionDetails } from \"./predictions/PredictionDetails\";\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 96px 32px 32px 32px;\n`;\n\nexport const App = () => {\n  return (\n    <WalletProvider>\n      <PredictionCardsProvider>\n        <Navigation />\n        <ContentWrapper>\n          <Switch>\n            <Route path=\"/\" exact component={EventDashboard} />\n            <Route path=\"/:eventId\" exact component={EventDetails} />\n            <Route path=\"/:eventId/:predictionId\" exact component={PredictionDetails} />\n          </Switch>\n        </ContentWrapper>\n      </PredictionCardsProvider>\n    </WalletProvider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { App } from './App';\nimport './index.css';\nimport { initStore } from './state';\nimport { Theme } from './theme';\n\n\nconst appStore = initStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={Theme}>\n      <Provider store={appStore}>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { AnyAction, applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { walletReducer } from \"./common/aeternity/walletState\";\n\nexport interface GenericAction extends AnyAction {\n  payload: any;\n}\n\nexport interface AppState {\n  wallet: {\n    account: string;\n    balance: string;\n    connecting: boolean;\n  }\n}\n\nexport const initStore = () => {\n  const rootReducer = combineReducers({\n    wallet: walletReducer\n  });\n  return createStore(rootReducer, applyMiddleware(thunk));\n};","import { DefaultTheme } from \"styled-components\";\n\n\nexport const Theme: DefaultTheme = {\n  colors: {\n    brand: '#000',\n    secondary: '#000',\n    accent: '#000'\n  },\n  padding: {\n    small: '4px',\n    medium: '8px',\n    large: '16px'\n  },\n  margin: {\n    small: '4px',\n    medium: '8px',\n    large: '16px',\n    xlarge: '64px',\n    xxlarge: '128px'\n  },\n  borderRadius: '5px'\n};\n"],"sourceRoot":""}